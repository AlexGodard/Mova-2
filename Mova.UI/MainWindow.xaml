<Window x:Class="Mova.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Icon="/Resources/hangerIcon_noir.png"
        Title="Mova" WindowStartupLocation="CenterScreen" WindowState="Maximized" MinHeight="900" MinWidth="1100" >

    <Window.Resources>
        <Style TargetType="MenuItem" x:Key="petitItem" x:Name="petitItem">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="Calibri" />
            <Setter Property="FontSize" Value="30" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="Black" />
            <Setter Property="SnapsToDevicePixels" Value="True" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                    <ColumnDefinition x:Name="Col3" Width="14"/>
                                </Grid.ColumnDefinitions>
                                <!-- ContentPresenter to show an Icon if needed -->
                                <ContentPresenter Grid.Column="0" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
                                <!-- Glyph is a checkmark if needed for a checkable menu -->
                                <Grid Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                    <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
                                </Grid>
                                <!-- Content for the menu text etc -->
                                <ContentPresenter Grid.Column="1" Margin="{TemplateBinding Padding}" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header"/>

                                <!-- Content for the menu IGT -->
                                <ContentPresenter Grid.Column="2" Margin="8,1,8,1" x:Name="IGTHost" ContentSource="InputGestureText" VerticalAlignment="Center"/>

                                <!-- Arrow drawn path which points to the next level of the menu -->
                                <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                    <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
                                </Grid>

                                <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                                <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <Border x:Name="SubMenuBorder" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}" BorderThickness="1" Padding="2,2,2,2">

                                        <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                            <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                        </Grid>
                                    </Border>
                                </Popup>

                            </Grid>
                        </Border>

                        <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                        <ControlTemplate.Triggers>
                            <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Padding" Value="6,1,6,1"/>
                                <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                                <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
                                <Setter Property="Width" Value="Auto" TargetName="Col3"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Padding" Value="6,1,6,1"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="0,2,0,2"/>
                            </Trigger>
                            <!-- Role = SubMenuItem : this is a child menu item which has children-->
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="0,2,0,2"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                            </Trigger>
                            <!-- If no Icon is present the we collapse the Icon Content -->
                            <Trigger Property="Icon" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            </Trigger>
                            <!-- The GlyphPanel contains the CheckMark -->
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            </Trigger>
                            <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" Value="#FF171717" TargetName="Border"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="LightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Name="MainWindowGrid">

        <Image Grid.RowSpan="3" Grid.ColumnSpan="3" Stretch="None" Source="pack://application:,,,/./Resources/fond.jpg" VerticalAlignment="Top" HorizontalAlignment="Center"/>

        <Menu Grid.Row="0" Grid.RowSpan="2" IsMainMenu="True" Visibility="{Binding MenuVisibility}" Height="50" Width="1000" VerticalAlignment="Top" HorizontalAlignment="Left" Background="Transparent" FontFamily="Calibri" >
            <MenuItem x:Name="menuMova" Header="Mova" FontSize="40" >
                <MenuItem.Icon>
                    <Image Source="pack://application:,,,/Resources/barresMenu.png" />
                </MenuItem.Icon>
                <MenuItem Header="Styliste" Click="MenuStyliste_Click" Style="{StaticResource petitItem}" Padding="0,10,0,0" >
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Resources/miroir.png" Width="40" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Récents" Click="MenuRecents_Click" Style="{StaticResource petitItem}" BorderBrush="#3b3838" BorderThickness="2" Padding="0,8,0,0" >
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Resources/clock.png" Width="30" Margin="10" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Favoris" Click="MenuFavoris_Click" Style="{StaticResource petitItem}" BorderBrush="#3b3838" BorderThickness="2" Padding="0,8,0,0" >
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Resources/thumbsUp.png" Width="35" Margin="8" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Ma garde-robe" Click="MenuMaGardeRobe_Click" Style="{StaticResource petitItem}" Padding="0,10,0,0" >
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Resources/wardrobe.png" Width="40" Margin="10" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Style="{StaticResource petitItem}" Height="40" Focusable="False" IsEnabled="False" />
                <MenuItem Header="Parcourir" Style="{StaticResource petitItem}" Focusable="False" IsEnabled="False" />
                <MenuItem Header="Activités" Click="MenuActivites_Click" Style="{StaticResource petitItem}" BorderBrush="#3b3838" BorderThickness="2" Padding="50,0,0,0" />
                <MenuItem Header="Styles" Click="MenuStyles_Click" Style="{StaticResource petitItem}" Padding="50,0,0,0"  />
                <MenuItem Header="" x:Name="btnAdmin" Style="{StaticResource petitItem}" Height="50" IsEnabled="False" Click="btnAdmin_Click" />
                <MenuItem Header="Connexion / Déconnexion" Click="MenuConnDeconn_Click" Style="{StaticResource petitItem}" />
                <MenuItem Header="Quitter" Click="MenuItem_Click" Style="{StaticResource petitItem}" Padding="0,0,0,20" />
            </MenuItem>
        </Menu>

        <ContentPresenter Grid.Row="1" Grid.Column="1" Content="{Binding CurrentView}" SnapsToDevicePixels="False"  />

        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="30*"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
    
    </Grid>
</Window>
